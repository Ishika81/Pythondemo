# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
    workflow_dispatch:
        inputs:
            environments:
                description: To deploy for env
                type: environment
                required: true
  #   push:
  #     branches: [ feature2 ]
  # # pull_request:
  # #   branches: [ master ]
            

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Build the Python Package
      run: |
        python -m build --outdir ${{ vars.ARTIFACTPATH }}
    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Build-Artifacts
        path: ${{ github.workspace  }}/${{ vars.ARTIFACTPATH }}
        retention-days: 5
 
  deploy:
        needs: build
        runs-on: self-hosted
        if: ${{ inputs.deploy  }}
        environment: ${{ inputs.environments }}
        steps:
            - name: echo BackupPath
              run: |
                cd ${{ vars.BACKUP_PATH }}
                dir
            - name: Backup artifacts
              run: |
                Copy-Item -Path ${{ vars.DEPLOYMENTPATH  }}/* -Destination ${{ vars.BACKUP_PATH }} -Force
            - name: echo BackupPath
              run: |
                cd ${{ vars.BACKUP_PATH }}
                dir
            - name: download artifacts
              uses: actions/download-artifact@v4
              with:
                name: Build-Artifacts
                path: ${{ vars.DEPLOYMENTPATH }}
            - name: Restart IIS
              run: |
                echo "restart IIS"
            - name: check status
              run: |
                echo "IIS Status"
